use serde::Deserialize;
use num_derive::FromPrimitive;
use std::convert::TryFrom;

#[repr(u8)]
#[derive(Deserialize, Debug, FromPrimitive, Clone)]
pub enum OldLicensee {
    UseNewLicensee = 0x00,
    Nintendo = 0x01,
    Capcom = 0x08,
    HotB = 0x09,
    Jaleco = 0x0A,
    CoconutsJapan = 0x0B,
    EliteSystems = 0x0C,
    ElectronicArts = 0x13,
    HudsonSoft = 0x18,
    ITCEntertainment = 0x19,
    Yanoman = 0x1A,
    JapanClary = 0x1D,
    VirginInteractive = 0x1F,
    PCMComplete = 0x24,
    SanX = 0x25,
    KotobukiSystems = 0x28,
    Seta = 0x29,
    Infogrames = 0x30,
    Bandai = 0x32,
    HectorSoft = 0x35,
    Banpresto = 0x39,
    Gremlin = 0x3E,
    Ubisoft = 0x41,
    Atlus = 0x42,
    Malibu = 0x44,
    Angel = 0x46,
    SpectrumHoloByte = 0x47,
    Irem = 0x49,
    GameTek = 0x54,
    ParkPlace = 0x55,
    LJN = 0x56,
    LJN2 = 0xFF,
    Matchbox = 0x57,
    MiltonBradley = 0x59,
    Mindscape = 0x5A,
    Romstar = 0x5B,
    NaxatSoft = 0x5C,
    Tradewest = 0x5D,
    Titus = 0x60,
    OceanInteractive = 0x67,
    EliteSystems2 = 0x6E,
    ElectroBrain = 0x6F,
    TheSalesCurve = 0x75,
    THQ = 0x78,
    Accolade = 0x79,
    TriffixEntertainment = 0x7A,
    Microprose = 0x7C,
    Kemco = 0x7F,
    MisawaEntertainment = 0x80,
    Lozc = 0x83,
    TokumaShotenIntermedia = 0x86,
    BulletProofSoftware = 0x8B,
    VicTokai = 0x8C,
    Ape = 0x8E,
    Chunsoft = 0x91,
    VideoSystem = 0x92,
    TsubarayaProductionsCo = 0x93,
    VarieCorporation = 0x95,
    YonezawaSPal = 0x96,
    Kaneko = 0x97,
    Arc = 0x99,
    NihonBussan = 0x9A,
    Tecmo = 0x9B,
    Imagineer = 0x9C,
    Nova = 0x9F,
    HoriElectric = 0xA1,
    Konami = 0xA4,
    Konami2 = 0x34,
    Kawada = 0xA6,
    Takara = 0xA7,
    TechnosJapan = 0xA9,
    Broderbund = 0xAA,
    ToeAnimation = 0xAC,
    Toho = 0xAD,
    Namco = 0xAF,
    Acclaim = 0xB0,
    ASCIINexoft = 0xB1,
    SquareEnix = 0xB4,
    HALLaboratory = 0xB6,
    SNK = 0xB7,
    PonyCanyon = 0xB9,
    CultureBrain = 0xBA,
    Sunsoft = 0xBB,
    SonyImagesoft = 0xBD,
    Sammy = 0xBF,
    Taito = 0xC0,
    Kemco2 = 0xC2,
    Squaresoft = 0xC3,
    DataEast = 0xC5,
    Tonkinhouse = 0xC6,
    Koei = 0xC8,
    Ultra = 0xCA,
    Vap = 0xCB,
    UseCorporation = 0xCC,
    Meldac = 0xCD,
    PonyCanyon2 = 0xCE,
    Angel2 = 0xCF,
    Sofel = 0xD1,
    Quest = 0xD2,
    SigmaEnterprises = 0xD3,
    ASKKodanshaCo = 0xD4,
    CopyaSystem = 0xD7,
    Sofel2 = 0xDE,
    Jaleco2 = 0xE0,
    TowaChiki = 0xE1,
    Yutaka = 0xE2,
    Varie2 = 0xE3,
    Epcoh = 0xE5,
    Athena = 0xE7,
    Asmik = 0xE8,
    Natsume = 0xE9,
    KingRecords = 0xEA,
    EpicSonyRecords = 0xEC,
    IGS = 0xEE,
    AWave = 0xF0,
    ExtremeEntertainment = 0xF3,
}

impl Into<&'static str> for OldLicensee {
    fn into(self) -> &'static str {
        match self {
            OldLicensee::UseNewLicensee => "Use the new Licensee table",
            OldLicensee::Nintendo => "Nintendo",
            OldLicensee::Capcom => "Capcom",
            OldLicensee::HotB => "Hot-B",
            OldLicensee::Jaleco => "Jaleco",
            OldLicensee::CoconutsJapan => "Coconuts Japan",
            OldLicensee::EliteSystems => "Elite Systems",
            OldLicensee::ElectronicArts => "EA (Electronic Arts)",
            OldLicensee::HudsonSoft => "Hudsonsoft",
            OldLicensee::ITCEntertainment => "ITC Entertainment",
            OldLicensee::Yanoman => "Yanoman",
            OldLicensee::JapanClary => "Japan Clary",
            OldLicensee::VirginInteractive => "Virgin Interactive",
            OldLicensee::PCMComplete => "PCM Complete",
            OldLicensee::SanX => "San-X",
            OldLicensee::KotobukiSystems => "Kotobuki Systems",
            OldLicensee::Seta => "Seta",
            OldLicensee::Infogrames => "Infogrames",
            OldLicensee::Bandai => "Bandai",
            OldLicensee::Konami => "Konami",
            OldLicensee::Konami2 => "Konami",
            OldLicensee::HectorSoft => "HectorSoft",
            OldLicensee::Banpresto => "Banpresto",
            OldLicensee::Gremlin => "Gremlin",
            OldLicensee::Ubisoft => "Ubisoft",
            OldLicensee::Atlus => "Atlus",
            OldLicensee::Malibu => "Malibu",
            OldLicensee::Angel => "Angel",
            OldLicensee::SpectrumHoloByte => "Spectrum HoloByte",
            OldLicensee::Irem => "Irem",
            OldLicensee::GameTek => "GameTek",
            OldLicensee::ParkPlace => "Park Place",
            OldLicensee::LJN => "LJN",
            OldLicensee::LJN2 => "LJN",
            OldLicensee::Matchbox => "Matchbox",
            OldLicensee::MiltonBradley => "Milton Bradley",
            OldLicensee::Mindscape => "Mindscape",
            OldLicensee::Romstar => "Romstar",
            OldLicensee::NaxatSoft => "Naxat Soft",
            OldLicensee::Tradewest => "Tradewest",
            OldLicensee::Titus => "Titus",
            OldLicensee::OceanInteractive => "Ocean Interactive",
            OldLicensee::EliteSystems2 => "Elite Systems",
            OldLicensee::ElectroBrain => "Electro Brain",
            OldLicensee::TheSalesCurve => "The Sales Curve",
            OldLicensee::THQ => "THQ",
            OldLicensee::Accolade => "Accolade",
            OldLicensee::TriffixEntertainment => "Triffix Entertainment",
            OldLicensee::Microprose => "Microprose",
            OldLicensee::Kemco => "Kemco",
            OldLicensee::MisawaEntertainment => "Misawa Entertainment",
            OldLicensee::Lozc => "Lozc",
            OldLicensee::TokumaShotenIntermedia => "Tokuma Shoten Intermedia",
            OldLicensee::BulletProofSoftware => "Bullet-Proof Software",
            OldLicensee::VicTokai => "Vic Tokai",
            OldLicensee::Ape => "Ape",
            OldLicensee::Chunsoft => "Chunsoft",
            OldLicensee::VideoSystem => "Video System",
            OldLicensee::TsubarayaProductionsCo => "Tsubaraya Productions Co.",
            OldLicensee::VarieCorporation => "Varie Corporation",
            OldLicensee::YonezawaSPal => "Yonezawa/S'Pal",
            OldLicensee::Kaneko => "Kaneko",
            OldLicensee::Arc => "Arc",
            OldLicensee::NihonBussan => "Nihon Bussan",
            OldLicensee::Tecmo => "Tecmo",
            OldLicensee::Imagineer => "Imagineer",
            OldLicensee::Nova => "Nova",
            OldLicensee::HoriElectric => "Hori Electric",
            OldLicensee::Kawada => "Kawada",
            OldLicensee::Takara => "Takara",
            OldLicensee::TechnosJapan => "Technos Japan",
            OldLicensee::Broderbund => "Broderbund",
            OldLicensee::ToeAnimation => "Toe Animation",
            OldLicensee::Toho => "Toho",
            OldLicensee::Namco => "Namco",
            OldLicensee::Acclaim => "Acclaim",
            OldLicensee::ASCIINexoft => "ASCII or Nexoft",
            OldLicensee::SquareEnix => "Square Enix",
            OldLicensee::HALLaboratory => "HAL Laboratory",
            OldLicensee::SNK => "SNK",
            OldLicensee::PonyCanyon => "Pony Canyon",
            OldLicensee::CultureBrain => "Culture Brain",
            OldLicensee::Sunsoft => "Sunsoft",
            OldLicensee::SonyImagesoft => "Sony Imagesoft",
            OldLicensee::Sammy => "Sammy",
            OldLicensee::Taito => "Taito",
            OldLicensee::Kemco2 => "Kemco",
            OldLicensee::Squaresoft => "Squaresoft",
            OldLicensee::DataEast => "Data East",
            OldLicensee::Tonkinhouse => "Tonkinhouse",
            OldLicensee::Koei => "Koei",
            OldLicensee::Ultra => "Ultra",
            OldLicensee::Vap => "Vap",
            OldLicensee::UseCorporation => "Use Corporation",
            OldLicensee::Meldac => "Meldac",
            OldLicensee::PonyCanyon2 => "Pony Canyon",
            OldLicensee::Angel2 => "Angel",
            OldLicensee::Sofel => "Sofel",
            OldLicensee::Quest => "Quest",
            OldLicensee::SigmaEnterprises => "Sigma Enterprises",
            OldLicensee::ASKKodanshaCo => "ASK Kodansha Co.",
            OldLicensee::CopyaSystem => "Copya System",
            OldLicensee::Sofel2 => "Sofel",
            OldLicensee::Jaleco2 => "Jaleco",
            OldLicensee::TowaChiki => "Towa Chiki",
            OldLicensee::Yutaka => "Yutaka",
            OldLicensee::Varie2 => "Varie",
            OldLicensee::Epcoh => "Epoch",
            OldLicensee::Athena => "Athena",
            OldLicensee::Asmik => "Asmik ACE Entertainment",
            OldLicensee::Natsume => "Natsume",
            OldLicensee::KingRecords => "King Records",
            OldLicensee::EpicSonyRecords => "Epic/Sony Records",
            OldLicensee::IGS => "IGS",
            OldLicensee::AWave => "A Wave",
            OldLicensee::ExtremeEntertainment => "Extreme Entertainment",
        }
    }
}

impl TryFrom<u8> for OldLicensee {
    type Error = &'static str;

    fn try_from(value: u8) -> Result<Self, Self::Error> {

        if value == 0x33 {
            return Ok(OldLicensee::UseNewLicensee);
        }

        let el = num::FromPrimitive::from_u8(value);

        match el {
            Some(val) => Ok(val),
            None => Err("Could not parse OldLicensee"),
        }
    }
}
